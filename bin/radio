#!/bin/bash

BINDIR="$( cd "$(dirname "$0")" ; pwd -P )"
MAINDIR=$(realpath $BINDIR/..)
ETCDIR=$MAINDIR/etc
ICONDIR=$MAINDIR/share/icons
CFG_FILE=$ETCDIR/radio.cfg
CFG_SINGLE=$ETCDIR/SingleChannel.cfg
CFG_ROKS=$ETCDIR/RadioROKS.cfg
CFG_SOMAFM=$ETCDIR/SomaFM.cfg

# filtered configs
CFG=`sed '/^[[:blank:]]*#/d;s/#.*//' $CFG_FILE`
CFG_ROOT=`sed '/^[[:blank:]]*#/d;s/#.*//;/^{root}/d' $CFG_FILE`

do_log () {
  LOGF=~/log/radio/$1
  while true
  do
    read -d ';'
    if [[ ${REPLY} =~ " finished." ]]; then
      # on getting
      #[0:02] Decoding of lush-128.mp3 finished.
      echo > /tmp/streamurl; echo > /tmp/streamtitle; echo "exited..."
      break;
    fi
    if [ ! -z "$REPLY" ]; then

      if [[ -z $ICY_NAME ]]; then
        ICY_NAME=$(echo "$REPLY"| grep ICY-NAME|sed s/ICY-NAME:\//g|sed s/\'$//g);
        if [[ -n $ICY_NAME ]]; then echo; echo $ICY_NAME; fi
      fi
      if [[ -z $ICY_URL ]]; then
        ICY_URL=$(echo "$REPLY"| grep ICY-URL|sed s/ICY-URL:\//g|sed s/\'$//g);
        if [[ -n $ICY_URL ]]; then echo $ICY_URL; echo; fi
      fi

      TRACK=$(echo "$REPLY"| grep ICY-META|sed s/ICY-META:\ StreamTitle=\'//g|sed s/\'$//g);
      if [[ -n $TRACK ]]; then
        (notify-send -i $2 "$TRACK" && TIM=`date +%H:%M` && DAT=`date +%Y%m%d` && echo $TRACK && echo $TRACK > /tmp/streamtitle && echo "$TIM $TRACK" >> "$LOGF-$DAT.log")
      fi
      sleep 1;
    fi
  done
}

play () {
  echo $1 > /tmp/streamurl
  echo $2
  mpg123 -C "$1" &> /dev/stdout | do_log "$3" "$4"
}

echoRadioChannel () {
  cat $1 | sed s/^/$2\|/g | awk -F '|' '{print $1"|"$2}'
}

play_channel () {
  RGRP=`echo "$1" | cut -d "|" -f 1`
  RCNL=`echo "$1" | cut -d "|" -f 2`
  STREAM=`echo "$1" | cut -d "|" -f 3`
  NAME=`echo "$1" | cut -d "|" -f 4`
  ICON=`echo "$1" | cut -d "|" -f 5`

  if [ "$RGRP" = "{root}" ]; then
    LOGNAME="$RCNL/online"
  else
    LOGNAME="$RGRP/$RCNL/online"
  fi

  if [[ $STREAM =~ ^\{somafm! ]]; then
    STR=`echo "$STREAM" | sed 's/{//;s/}//;'`
    CHANNEL=`echo "$STR" | cut -d "!" -f 2`
    BITRATE=`echo "$STR" | cut -d "!" -f 3`
    CHANNELN=$(( ( RANDOM % 4 )  + 1 ))
    STREAM="http://ice${CHANNELN}.somafm.com/${CHANNEL}-${BITRATE}-mp3"
  fi

  play "$STREAM" "$NAME" "$1/online" "$ICONDIR/$ICON"
}

do_random () {
  CHANNEL=`echo "$CFG" | sed "/|{group}|/d" | shuf -n 1`
  play_channel "$CHANNEL"
}

do_radio_group_channel () {
  CHANNEL=`echo "$CFG" | sed -n "/^$1|$2|/p"`
  if [[ -z $CHANNEL ]]; then
    error
  else
    play_channel "$CHANNEL"
  fi
}

do_radio () {
  # check how much args received
  if [[ -z $2 ]]; then
    # try to play root channel
    CHANNEL=`echo "$CFG" | sed -n "/^{root}|$1|/p"`
    if [[ -z $CHANNEL ]]; then
      # there isn't a root channel
      # try to play group with empty channel
      CHANNEL=`echo "$CFG" | sed -n "/^$1|{empty}|/p"`
      if [[ -z $CHANNEL ]]; then
        #there isn't a group with empty channel
        error
      fi
    fi
    play_channel "$CHANNEL"
  else
    # play radio channel
    do_radio_group_channel $1 $2
  fi
}


check_config () {
  if [[ -n `sed -n '/^$/=' $2` ]]; then
    echo "There is an empty lines in config file $2"
    exit
  fi
  if [[ -n `sed -e $1 $2` ]]; then
    echo "There is an error in config file $2"
    exit
  fi
}

check_configs () {
  check_config "/^[^|]*|[^|]*|[^|]*|[^|]*$/d" $CFG_SINGLE
  check_config "/^[^|]*|[^|]*|[^|]*$/d" $CFG_ROKS
  check_config "/^[^|]*|[^|]*|[^|]*|[^|]*$/d" $CFG_SOMAFM
}

check_log_dirs () {
  [ -d ~/log/radio/soma.fm ] || mkdir -p ~/log/radio/soma.fm
  [ -d ~/log/radio/Radio\ ROKS ] || mkdir -p ~/log/radio/Radio\ ROKS
  for DIR in $(cat $CFG_SINGLE | awk -F '|' '{print $1}')
  do
    [ -d ~/log/radio/$DIR ] || mkdir -p ~/log/radio/$DIR
  done
}

print_single () {
  cat $CFG_SINGLE  ''
}

help_single() {
  echo "$CFG" | sed -n '/^{root}/p' | awk -F '|' '{print $2"      \t\t"$4}'
}

help_group() {
  echo "$CFG" | sed -n "/^$1|{group}/p" | awk -F '|' '{print $1"      \t\t"$4}'
  echo "$CFG" | sed -n "/^$1|{group}/d;/^$1/p" | awk -F '|' '{print "\t"$2"      \t"$4}'
}

help_groups() {
  for GRP in $(echo "$CFG_ROOT" | awk -F '|' '{print $1}' | uniq)
  do
    help_group $GRP
  done
}

do_help () {
  echo "Shell for radio"
  echo "usage: radio [name] [channel]"
  echo
  echo "list of supported radios and channels:"
  echo -e "radio\tchannel\t\tdescription"
  echo
  help_single
  help_groups
  echo -e "\t{empty}\t\trandom channel selection"
  echo -e "~\t\t\trandom radio and channel selection"
  echo
  echo "terminal control keys:"
  echo
  echo -e " [+]\t\tvolume up"
  echo -e " [-]\t\tvolume down"
  echo -e " [s] or [ ]\tinterrupt/restart playback (i.e. 'pause')"
  echo -e " [q]\t\tquit"
  echo
}

error () {
  echo "You made some mistake in program usage... let me briefly remind you:"
  echo
  help
}

do_main () {
  if [[ -z $1 ]]; then
    do_help      # without options
  else
    case $1 in
      ~)
        do_random
        ;;
      help)
        do_help
        ;;
      *)
        do_radio $1 $2
        ;;
    esac
  fi
}

check_configs
check_log_dirs
do_main $1 $2
